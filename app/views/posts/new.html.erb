<div class="w-full max-w-lg mx-auto my-10 bg-white p-8 border border-gray-300 rounded-lg shadow-lg">
  <%= form_with model: @post, id: dom_id(@post), local: true do |f| %>
    <div class="mb-6">
      <%= f.label :title, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :title, class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :description, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_area :description, class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline', rows: 5 %>
    </div>
    <div class="mb-6">
      <%= f.label :images, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.file_field :images, multiple: true, class: 'block w-full text-sm text-gray-700 border rounded cursor-pointer focus:outline-none focus:border-purple-500' %>
    </div>
    <div class="mb-6">
      <%= f.label :price, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.number_field :price, class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline', step: 0.01 %>
    </div>
    <div class="mb-6">
      <%= f.label :category_id, "Category", class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.collection_select :category_id, @categories, :id, :name, { prompt: "Wybierz kategorię." }, class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :availability, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :availability, class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :contact_information, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :contact_information, class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :street, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :street, id: 'street', placeholder: 'Użyj mapy aby uzupełnić adres.', class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :city, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :city, id: 'city', class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :state, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :state, id: 'state', class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="mb-6">
      <%= f.label :country, class: 'block text-gray-700 text-sm font-bold mb-2' %>
      <%= f.text_field :country, id: 'country', class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline' %>
    </div>
    <div class="grid grid-cols-2 gap-4 mb-6">
      <div>
        <%= f.label :latitude, class: 'block text-gray-700 text-sm font-bold mb-2' %>
        <%= f.text_field :latitude, id: 'latitude', class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline', readonly: true %>
      </div>
      <div>
        <%= f.label :longitude, class: 'block text-gray-700 text-sm font-bold mb-2' %>
        <%= f.text_field :longitude, id: 'longitude', class: 'shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline', readonly: true %>
      </div>
    </div>
    <div class="mb-6">
      <div id="map" style="height: 300px;" class="w-full h-64 border rounded-lg"></div>
    </div>
    <%= f.submit 'Submit', class: 'w-full bg-purple-500 hover:bg-purple-700 text-white font-bold py-2 px-4 rounded focus:outline-none focus:shadow-outline' %>
  <% end %>
</div>
<script>
  function initMap() {
    var mapElement = document.getElementById('map');
    if (!mapElement) {
      console.error("Map element not found!");
      return;
    }

    var map = new google.maps.Map(mapElement, {
      center: {lat: -34.397, lng: 150.644},
      zoom: 15
    });

    var marker;
    var geocoder = new google.maps.Geocoder();
    var autocomplete = new google.maps.places.Autocomplete(document.getElementById('street'));

    autocomplete.addListener('place_changed', function() {
      var place = autocomplete.getPlace();
      if (!place.geometry) {
        return;
      }
      map.setCenter(place.geometry.location);
      map.setZoom(17);

      if (marker) {
        marker.setPosition(place.geometry.location);
      } else {
        marker = new google.maps.Marker({
          position: place.geometry.location,
          map: map
        });
      }

      fillAddressFields(place);
    });

    google.maps.event.addListener(map, 'click', function(event) {
      var lat = event.latLng.lat();
      var lng = event.latLng.lng();

      document.getElementById('latitude').value = lat;
      document.getElementById('longitude').value = lng;

      if (marker) {
        marker.setPosition(event.latLng);
      } else {
        marker = new google.maps.Marker({
          position: event.latLng,
          map: map
        });
      }

      geocoder.geocode({'location': event.latLng}, function(results, status) {
        if (status === 'OK') {
          if (results[0]) {
            fillAddressFields(results[0]);
          }
        }
      });
    });

    if (navigator.geolocation) {
      navigator.geolocation.getCurrentPosition(
        function(position) {
          var pos = {
            lat: position.coords.latitude,
            lng: position.coords.longitude
          };

          map.setCenter(pos);
        },
        function() {
          handleLocationError(true, map.getCenter());
        }
      );
    } else {
      handleLocationError(false, map.getCenter());
    }
  }

  function fillAddressFields(place) {
    var addressComponents = place.address_components;

    addressComponents.forEach(function(component) {
      var types = component.types;
      if (types.indexOf('street_number') !== -1) {
        document.getElementById('street').value = component.long_name;
      }
      if (types.indexOf('route') !== -1) {
        document.getElementById('street').value += ' ' + component.long_name;
      }
      if (types.indexOf('locality') !== -1) {
        document.getElementById('city').value = component.long_name;
      }
      if (types.indexOf('administrative_area_level_1') !== -1) {
        document.getElementById('state').value = component.long_name;
      }
      if (types.indexOf('country') !== -1) {
        document.getElementById('country').value = component.long_name;
      }
    });
  }

  function handleLocationError(browserHasGeolocation, pos) {
    var infoWindow = new google.maps.InfoWindow({
      position: pos,
      content: browserHasGeolocation ?
               'Error: The Geolocation service failed.' :
               'Error: Your browser doesn\'t support geolocation.'
    });
    infoWindow.open(map);
  }

  document.addEventListener('turbo:load', function() {
    if (document.getElementById('map')) {
      initMap();
    }
  });

  document.addEventListener('DOMContentLoaded', function() {
    if (document.getElementById('map')) {
      initMap();
    }
  });
</script>
